@model Saimoe.Models.Profile

@{
    ViewBag.Title = WebResources.JoinContest;
}

<div class="container">
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@WebResources.ContestantProfile</legend>

        @{
    Saimoe.Models.GoogleUser user = ViewBag.User;
        }
        <div class="well profile span4">
            <a href="@user.Url">
                <img class="profile-image" src="@user.Image.Url" alt="" width="48px" height="48px" />
                <span class="profile-name">@user.DisplayName</span>
            </a>
        </div>
        <div class="logout-hint span4">
            @string.Format(WebResources.NotSomebody, user.DisplayName)
            @Html.ActionLink(WebResources.Logout, "Logout", "OAuth")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tagline)
        </div>
        <div class="editor-field">
            @Html.TextBoxWithPlaceholderFor(model => model.Tagline, new { @class = "span3" })
            @Html.ValidationMessageFor(model => model.Tagline)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Interest)
        </div>
        <div class="editor-field">
            @Html.TextBoxWithPlaceholderFor(model => model.Interest, new { @class = "span3" })
            @Html.ValidationMessageFor(model => model.Interest)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Characteristic)
        </div>
        <div class="editor-field">
            @Html.TextBoxWithPlaceholderFor(model => model.Characteristic, new { @class = "span3" })
            @Html.ValidationMessageFor(model => model.Characteristic)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.JoinedDate)
        </div>
        <div class="editor-field">
            @{
                var minDate = (DateTime)ViewBag.MinDate;
                var years = Enumerable.Range(minDate.Year, DateTime.Now.Year - minDate.Year + 1).Select(
                    y => new SelectListItem { Text = y.ToString(), Value = y.ToString() });
                var months = Enumerable.Range(1, 12).Select(
                    m => new SelectListItem { Text = m.ToString(), Value = m.ToString() });
                var required = new System.ComponentModel.DataAnnotations.RequiredAttribute();
                var htmlAttributes = new Dictionary<string, object>
                {
                    { "class", "input-small" },
                    { "data-val", "true" },
                    { "data-val-required", required.FormatErrorMessage(@WebResources.JoiningDateYear) },
                };
            }
            @Html.DropDownList("JoinedDateYear", years, WebResources.JoiningDateYear, htmlAttributes)
            @{
                htmlAttributes["data-val-required"] = required.FormatErrorMessage(@WebResources.JoiningDateMonth);
            }
            @Html.DropDownList("JoinedDateMonth", months, WebResources.JoiningDateMonth, htmlAttributes)
            @Html.ValidationMessage("JoinedDateYear", new { @class = "no-required-mark" })
            @Html.ValidationMessage("JoinedDateMonth", new { @class = "no-required-mark" })
            @Html.ValidationMessageFor(model => model.JoinedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RegistrationPost)
        </div>
        <div class="editor-field">
            @Html.TextBoxWithPlaceholderFor(model => model.RegistrationPost, new { @class = "input-xxlarge" })
            @Html.ValidationMessageFor(model => model.RegistrationPost)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ActingCute)
        </div>
        <div class="editor-field">
            @Html.TextBoxWithPlaceholderFor(model => model.ActingCute, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.ActingCute)
        </div>

        <p>
            <input type="submit" value="@WebResources.JoinContest" class="btn btn-primary" />
        </p>
    </fieldset>
}

</div>



